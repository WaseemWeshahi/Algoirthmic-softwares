The problem had 40 jobs that needed to be scheduled on 4 machines.
-----------------------------------------
Overall number of generations created: 1125
Number of seconds elapsed: 11.491
The final solution:
m1 : J1(1, 1), J6(2, 1), J7(3, 1), J13(3, 1), J30(3, 1), J20(6, 1), J32(6, 1), J26(7, 1), J25(14, 1), J4(15, 1), J5(15, 1), J36(15, 1), J37(18, 1) 	 sum: 108, types: 1
m2 : J12(1, 1), J24(8, 1), J28(8, 1), J18(9, 1), J40(9, 1), J23(10, 1), J2(12, 1), J27(13, 1), J9(19, 1), J35(20, 1) 	 sum: 109, types: 1
m3 : J10(5, 1), J3(6, 1), J33(14, 1), J16(15, 1), J22(15, 1), J19(17, 1), J17(18, 1), J38(19, 1) 	 sum: 109, types: 1
m4 : J39(2, 1), J15(8, 1), J21(8, 1), J8(10, 1), J29(13, 1), J14(16, 1), J31(16, 1), J34(17, 1), J11(18, 1) 	 sum: 108, types: 1

Objective function's value: max{108, 109, 109, 108} = 109
*Lower bound (not necessarily tight): 109

**output format:
	m_k is the k'th machine.
	J_i(P, T, M) is the i'th job with processing time P, of type T, and is assigned to machine M (marked as '?' when unassigned).