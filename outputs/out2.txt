The problem had 19 jobs that needed to be scheduled on 3 machines.
*****************************************
Extending the node: Layer:0, Upper bound:54, Lower bound:50
Assignment:[J1(4, 1, 1), J2(5, 5, '?'), J3(10, 3, '?'), J4(13, 3, '?'), J5(3, 4, '?'), J6(7, 2, '?'), J7(8, 1, '?'), J8(9, 4, '?'), J9(13, 3, '?'), J10(8, 5, '?'), J11(16, 3, '?'), J12(8, 2, '?'), J13(7, 5, '?'), J14(2, 1, '?'), J15(4, 3, '?'), J16(5, 4, '?'), J17(8, 2, '?'), J18(11, 1, '?'), J19(9, 1, '?')]
Current best solution:
m1 : J14(2, 1), J1(4, 1), J7(8, 1), J15(4, 3), J9(13, 3), J5(3, 4), J16(5, 4), J8(9, 4) 	 sum: 48, types: 1, 3, 4
m2 : J17(8, 2), J3(10, 3), J11(16, 3), J2(5, 5), J13(7, 5), J10(8, 5) 	 sum: 54, types: 2, 3, 5
m3 : J19(9, 1), J18(11, 1), J6(7, 2), J12(8, 2), J4(13, 3) 	 sum: 48, types: 1, 2, 3
Machines finishing_times: {48, 54, 48}
*****************************************
Extending the node: Layer:1, Upper bound:50, Lower bound:50
Assignment:[J1(4, 1, 1), J2(5, 5, 3), J3(10, 3, '?'), J4(13, 3, '?'), J5(3, 4, '?'), J6(7, 2, '?'), J7(8, 1, '?'), J8(9, 4, '?'), J9(13, 3, '?'), J10(8, 5, '?'), J11(16, 3, '?'), J12(8, 2, '?'), J13(7, 5, '?'), J14(2, 1, '?'), J15(4, 3, '?'), J16(5, 4, '?'), J17(8, 2, '?'), J18(11, 1, '?'), J19(9, 1, '?')]
Current best solution:
m1 : J14(2, 1), J1(4, 1), J19(9, 1), J17(8, 2), J15(4, 3), J3(10, 3), J4(13, 3) 	 sum: 50, types: 1, 2, 3
m2 : J7(8, 1), J18(11, 1), J6(7, 2), J12(8, 2), J11(16, 3) 	 sum: 50, types: 1, 2, 3
m3 : J9(13, 3), J5(3, 4), J16(5, 4), J8(9, 4), J2(5, 5), J13(7, 5), J10(8, 5) 	 sum: 50, types: 3, 4, 5
Machines finishing_times: {50, 50, 50}
-----------------------------------------
Overall number of nodes visited: 5
Number of seconds elapsed: 0.006
The final solution:
m1 : J14(2, 1), J1(4, 1), J19(9, 1), J17(8, 2), J15(4, 3), J3(10, 3), J4(13, 3) 	 sum: 50, types: 1, 2, 3
m2 : J7(8, 1), J18(11, 1), J6(7, 2), J12(8, 2), J11(16, 3) 	 sum: 50, types: 1, 2, 3
m3 : J9(13, 3), J5(3, 4), J16(5, 4), J8(9, 4), J2(5, 5), J13(7, 5), J10(8, 5) 	 sum: 50, types: 3, 4, 5

Objective function's value: max{50, 50, 50} = 50
*Lower bound (not necessarily tight): 50

**output format:
	m_k is the k'th machine.
	J_i(P, T, M) is the i'th job with processing time P, of type T, and is assigned to machine M (marked as '?' when unassigned).