The problem had 40 jobs that needed to be scheduled on 2 machines.
-----------------------------------------
Overall number of generations created: 94
Number of seconds elapsed: 0.922
The final solution:
m1 : J34(7, 1), J3(8, 1), J20(8, 1), J25(9, 1), J26(9, 1), J33(9, 1), J14(10, 1), J30(10, 1), J5(11, 1), J31(11, 1), J6(13, 1), J9(14, 1), J32(14, 1), J1(17, 1), J15(17, 1), J17(18, 1), J22(20, 1), J40(20, 1) 	 sum: 225, types: 1
m2 : J8(1, 1), J4(2, 1), J23(3, 1), J13(4, 1), J12(5, 1), J38(5, 1), J39(5, 1), J27(6, 1), J36(8, 1), J2(10, 1), J11(10, 1), J19(11, 1), J18(12, 1), J29(12, 1), J28(13, 1), J21(14, 1), J35(14, 1), J7(17, 1), J37(17, 1), J16(18, 1), J24(18, 1), J10(19, 1) 	 sum: 224, types: 1

Objective function's value: max{225, 224} = 225
*Lower bound (not necessarily tight): 225

**output format:
	m_k is the k'th machine.
	J_i(P, T, M) is the i'th job with processing time P, of type T, and is assigned to machine M (marked as '?' when unassigned).