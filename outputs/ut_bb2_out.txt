The problem had 20 jobs that needed to be scheduled on 8 machines.
*****************************************
Extending the node: Layer:0, Upper bound:7, Lower bound:6
Assignment:[J1(3, 1, 1), J2(3, 1, '?'), J3(3, 1, '?'), J4(3, 1, '?'), J5(3, 1, '?'), J6(3, 1, '?'), J7(3, 1, '?'), J8(3, 1, '?'), J9(2, 2, '?'), J10(2, 2, '?'), J11(2, 2, '?'), J12(2, 2, '?'), J13(2, 2, '?'), J14(2, 2, '?'), J15(2, 2, '?'), J16(2, 2, '?'), J17(2, 2, '?'), J18(2, 2, '?'), J19(2, 2, '?'), J20(2, 2, '?')]
Current best solution:
m1 : J1(3, 1), J16(2, 2), J17(2, 2) 	 sum: 7, types: 1, 2
m2 : J2(3, 1), J15(2, 2), J18(2, 2) 	 sum: 7, types: 1, 2
m3 : J3(3, 1), J14(2, 2), J19(2, 2) 	 sum: 7, types: 1, 2
m4 : J4(3, 1), J13(2, 2), J20(2, 2) 	 sum: 7, types: 1, 2
m5 : J5(3, 1), J12(2, 2) 	 sum: 5, types: 1, 2
m6 : J6(3, 1), J11(2, 2) 	 sum: 5, types: 1, 2
m7 : J7(3, 1), J10(2, 2) 	 sum: 5, types: 1, 2
m8 : J8(3, 1), J9(2, 2) 	 sum: 5, types: 1, 2
Machines finishing_times: {7, 7, 7, 7, 5, 5, 5, 5}
*****************************************
Extending the node: Layer:7, Upper bound:6, Lower bound:6
Assignment:[J1(3, 1, 1), J2(3, 1, 8), J3(3, 1, 8), J4(3, 1, 7), J5(3, 1, 7), J6(3, 1, 6), J7(3, 1, 6), J8(3, 1, 1), J9(2, 2, '?'), J10(2, 2, '?'), J11(2, 2, '?'), J12(2, 2, '?'), J13(2, 2, '?'), J14(2, 2, '?'), J15(2, 2, '?'), J16(2, 2, '?'), J17(2, 2, '?'), J18(2, 2, '?'), J19(2, 2, '?'), J20(2, 2, '?')]
Current best solution:
m1 : J1(3, 1), J8(3, 1) 	 sum: 6, types: 1
m2 : J9(2, 2), J16(2, 2), J17(2, 2) 	 sum: 6, types: 2
m3 : J10(2, 2), J15(2, 2), J18(2, 2) 	 sum: 6, types: 2
m4 : J11(2, 2), J14(2, 2), J19(2, 2) 	 sum: 6, types: 2
m5 : J12(2, 2), J13(2, 2), J20(2, 2) 	 sum: 6, types: 2
m6 : J6(3, 1), J7(3, 1) 	 sum: 6, types: 1
m7 : J4(3, 1), J5(3, 1) 	 sum: 6, types: 1
m8 : J2(3, 1), J3(3, 1) 	 sum: 6, types: 1
Machines finishing_times: {6, 6, 6, 6, 6, 6, 6, 6}
-----------------------------------------
Overall number of nodes visited: 17555258
Number of seconds elapsed: 6809.742
The final solution:
m1 : J1(3, 1), J8(3, 1) 	 sum: 6, types: 1
m2 : J9(2, 2), J16(2, 2), J17(2, 2) 	 sum: 6, types: 2
m3 : J10(2, 2), J15(2, 2), J18(2, 2) 	 sum: 6, types: 2
m4 : J11(2, 2), J14(2, 2), J19(2, 2) 	 sum: 6, types: 2
m5 : J12(2, 2), J13(2, 2), J20(2, 2) 	 sum: 6, types: 2
m6 : J6(3, 1), J7(3, 1) 	 sum: 6, types: 1
m7 : J4(3, 1), J5(3, 1) 	 sum: 6, types: 1
m8 : J2(3, 1), J3(3, 1) 	 sum: 6, types: 1

Objective function's value: max{6, 6, 6, 6, 6, 6, 6, 6} = 6
*Lower bound (not necessarily tight): 6

**output format:
	m_k is the k'th machine.
	J_i(P, T, M) is the i'th job with processing time P, of type T, and is assigned to machine M (marked as '?' when unassigned).