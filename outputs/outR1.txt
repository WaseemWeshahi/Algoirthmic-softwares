The problem had 40 jobs that needed to be scheduled on 2 machines.
-----------------------------------------
Overall number of generations created: 20
Number of seconds elapsed: 0.230
The final solution:
m1 : J35(1, 1), J39(2, 1), J7(3, 1), J11(3, 1), J12(3, 1), J32(5, 1), J37(5, 1), J2(6, 1), J5(6, 1), J4(7, 1), J30(9, 1), J26(10, 1), J6(11, 1), J23(11, 1), J33(11, 1), J8(12, 1), J24(13, 1), J22(15, 1), J18(16, 1), J9(18, 1), J15(19, 1), J17(19, 1) 	 sum: 205, types: 1
m2 : J10(2, 1), J20(3, 1), J28(4, 1), J40(4, 1), J25(8, 1), J31(8, 1), J21(9, 1), J34(11, 1), J19(12, 1), J29(12, 1), J13(13, 1), J1(15, 1), J27(16, 1), J36(16, 1), J3(17, 1), J38(18, 1), J14(19, 1), J16(19, 1) 	 sum: 206, types: 1

Objective function's value: max{205, 206} = 206
*Lower bound (not necessarily tight): 206

**output format:
	m_k is the k'th machine.
	J_i(P, T, M) is the i'th job with processing time P, of type T, and is assigned to machine M (marked as '?' when unassigned).