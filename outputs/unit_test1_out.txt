The problem had 18 jobs that needed to be scheduled on 4 machines.
*****************************************
Extending the node: Layer:0, Upper bound:88, Lower bound:86
Assignment:[J1(13, 1, 1), J2(13, 1, '?'), J3(9, 1, '?'), J4(9, 1, '?'), J5(21, 1, '?'), J6(21, 1, '?'), J7(37, 1, '?'), J8(37, 1, '?'), J9(26, 1, '?'), J10(26, 1, '?'), J11(23, 1, '?'), J12(23, 1, '?'), J13(15, 1, '?'), J14(15, 1, '?'), J15(11, 1, '?'), J16(11, 1, '?'), J17(17, 1, '?'), J18(17, 1, '?')]
Current best solution:
m1 : J16(11, 1), J1(13, 1), J13(15, 1), J6(21, 1), J10(26, 1) 	 sum: 86, types: 1
m2 : J3(9, 1), J18(17, 1), J5(21, 1), J7(37, 1) 	 sum: 84, types: 1
m3 : J15(11, 1), J14(15, 1), J12(23, 1), J8(37, 1) 	 sum: 86, types: 1
m4 : J4(9, 1), J2(13, 1), J17(17, 1), J11(23, 1), J9(26, 1) 	 sum: 88, types: 1
Machines finishing_times: {86, 84, 86, 88}
*****************************************
Extending the node: Layer:1, Upper bound:86, Lower bound:86
Assignment:[J1(13, 1, 1), J2(13, 1, 4), J3(9, 1, '?'), J4(9, 1, '?'), J5(21, 1, '?'), J6(21, 1, '?'), J7(37, 1, '?'), J8(37, 1, '?'), J9(26, 1, '?'), J10(26, 1, '?'), J11(23, 1, '?'), J12(23, 1, '?'), J13(15, 1, '?'), J14(15, 1, '?'), J15(11, 1, '?'), J16(11, 1, '?'), J17(17, 1, '?'), J18(17, 1, '?')]
Current best solution:
m1 : J4(9, 1), J1(13, 1), J17(17, 1), J6(21, 1), J9(26, 1) 	 sum: 86, types: 1
m2 : J16(11, 1), J13(15, 1), J12(23, 1), J7(37, 1) 	 sum: 86, types: 1
m3 : J15(11, 1), J14(15, 1), J11(23, 1), J8(37, 1) 	 sum: 86, types: 1
m4 : J3(9, 1), J2(13, 1), J18(17, 1), J5(21, 1), J10(26, 1) 	 sum: 86, types: 1
Machines finishing_times: {86, 86, 86, 86}
-----------------------------------------
Overall number of nodes visited: 6
Number of seconds elapsed: 0.000
The final solution:
m1 : J4(9, 1), J1(13, 1), J17(17, 1), J6(21, 1), J9(26, 1) 	 sum: 86, types: 1
m2 : J16(11, 1), J13(15, 1), J12(23, 1), J7(37, 1) 	 sum: 86, types: 1
m3 : J15(11, 1), J14(15, 1), J11(23, 1), J8(37, 1) 	 sum: 86, types: 1
m4 : J3(9, 1), J2(13, 1), J18(17, 1), J5(21, 1), J10(26, 1) 	 sum: 86, types: 1

Objective function's value: max{86, 86, 86, 86} = 86
*Lower bound (not necessarily tight): 86

**output format:
	m_k is the k'th machine.
	J_i(P, T, M) is the i'th job with processing time P, of type T, and is assigned to machine M (marked as '?' when unassigned).