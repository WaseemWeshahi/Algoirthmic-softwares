The problem had 9 jobs that needed to be scheduled on 2 machines.
*****************************************
Extending the node: Layer:0, Upper bound:33, Lower bound:31
Assignment:[J1(5, 1, 1), J2(9, 3, '?'), J3(9, 1, '?'), J4(6, 1, '?'), J5(10, 2, '?'), J6(3, 1, '?'), J7(3, 2, '?'), J8(10, 4, '?'), J9(7, 4, '?')]
Current best solution:
m1 : J6(3, 1), J1(5, 1), J4(6, 1), J3(9, 1), J8(10, 4) 	 sum: 33, types: 1, 4
m2 : J7(3, 2), J5(10, 2), J2(9, 3), J9(7, 4) 	 sum: 29, types: 2, 3, 4
Machines finishing_times: {33, 29}
*****************************************
Extending the node: Layer:2, Upper bound:31, Lower bound:31
Assignment:[J1(5, 1, 1), J2(9, 3, 2), J3(9, 1, 2), J4(6, 1, '?'), J5(10, 2, '?'), J6(3, 1, '?'), J7(3, 2, '?'), J8(10, 4, '?'), J9(7, 4, '?')]
Current best solution:
m1 : J6(3, 1), J1(5, 1), J7(3, 2), J5(10, 2), J8(10, 4) 	 sum: 31, types: 1, 2, 4
m2 : J4(6, 1), J3(9, 1), J2(9, 3), J9(7, 4) 	 sum: 31, types: 1, 3, 4
Machines finishing_times: {31, 31}
-----------------------------------------
Overall number of nodes visited: 6
Number of seconds elapsed: 0.000
The final solution:
m1 : J6(3, 1), J1(5, 1), J7(3, 2), J5(10, 2), J8(10, 4) 	 sum: 31, types: 1, 2, 4
m2 : J4(6, 1), J3(9, 1), J2(9, 3), J9(7, 4) 	 sum: 31, types: 1, 3, 4

Objective function's value: max{31, 31} = 31
*Lower bound (not necessarily tight): 31

**output format:
	m_k is the k'th machine.
	J_i(P, T, M) is the i'th job with processing time P, of type T, and is assigned to machine M (marked as '?' when unassigned).